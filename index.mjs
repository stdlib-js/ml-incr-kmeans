// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-matrix-like@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-minstd-shuffle@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dcopy@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/random-sample@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-discrete-uniform@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-mean@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-meanstdev@esm/index.mjs";var z=m,O=f,k=p;var A=function(t,e,r){return(r?k:O)("float64",new z(t*e),[t,e],[e,1],0,"row-major")},V=l.ndarray;var P=function(t,e){var r,i,s,n,o,a,d,m,f,p,l;for(f=e.shape[0],p=e.shape[1],r=e.data,i=t.data,s=e.strides[0],n=e.strides[1],o=t.strides[0],a=t.strides[1],d=e.offset,m=t.offset,l=0;l<f;l++)V(p,r,n,d,i,a,m),d+=s,m+=o;return t},F=m,M=f,q=p;var N=function(t,e){return(e?q:M)("float64",new F(t),[t],[1],0,"row-major")},R=l.ndarray;var S=function(t,e){return R(e.shape[0],e.data,e.strides[0],e.offset,t.data,t.strides[0],t.offset),t},_=u,B=c,L=h.isPrimitive,Y=v,C=t.isPrimitive,D=j,G=s,H=["euclidean","correlation","cosine"],I=["forgy","sample","kmeans++"];var J=function(t,e){if(!_(e))return new TypeError(G("invalid argument. Options argument must be an object. Value: `%s`.",e));if(B(e,"metric")&&(t.metric=e.metric,!D(H,t.metric)))return new TypeError(G('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"metric",H.join('", "'),t.metric));if(B(e,"init")){if(!Y(e.init))return new TypeError(G("invalid option. `%s` option must be an array-like object. Option: `%s`.","init",e.init));if(!D(I,e.init[0]))return new TypeError(G('invalid option. `%s` option method must be one of the following: "%s". Option: `%s`.',"init",I.join('", "'),e.init[0]));if(t.init[0]=e.init[0],e.init.length>1&&(t.init[1]=e.init[1],!C(t.init[1])))return new TypeError(G("invalid option. First `init` parameter option must be a positive integer. Option: `%s`.",t.init[1]));if(e.init.length>2&&(t.init[2]=e.init[2],!C(t.init[2])))return new TypeError(G("invalid option. Second `init` parameter option must be a positive integer. Option: `%s`.",t.init[2]))}return B(e,"normalize")&&(t.normalize=e.normalize,!L(t.normalize))?new TypeError(G("invalid option. `%s` option must be a boolean. Option: `%s`.","normalize",t.normalize)):B(e,"copy")&&(t.copy=e.copy,!L(t.copy))?new TypeError(G("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",t.copy)):(B(e,"seed")&&(t.seed=e.seed),null)},K={forgy:["forgy",1],sample:["sample",1],"kmeans++":["kmeans++",1,1]},Q=g;var U=function(t,e,r,i){var s,n,o,a;for(n=0,s=i,a=0;a<t;a++)n+=(o=e[s])*o,s+=r;for(n=Q(n),s=i,a=0;a<t;a++)e[s]/=n;return e},W=U;var X=function(t){var e,r,i,s,n,o,a;for(e=t.data,n=t.shape[0],o=t.shape[1],r=t.strides[0],i=t.strides[1],s=t.offset,a=0;a<n;a++)W(o,e,i,s),s+=r;return t};var Z=function(t,e,r,i,s,n,o,a,d,m){var f,p,l,u;for(f=i,p=o,l=m,u=0;u<t;u++)e[f]=(e[f]-s[p])/a[l],f+=r,p+=n,l+=d;return e},$=Z;var tt=function(t,e){var r,i,s,n,o,a,d;for(r=t.data,o=t.shape[0],a=t.shape[1],i=t.strides[0],s=t.strides[1],n=t.offset,d=0;d<o;d++)$(a,r,s,n,e,2,0,e,2,1),n+=i;return t},et=b.factory,rt=d.ndarray;var it=function(t,e,r){var i,s,n,o,a,d,m,f,p,l,u;for(p=t.shape[0],l=t.shape[1],s=t.data,d=t.strides[1],m=t.offset,n=e.data,o=e.strides[0],a=e.strides[1],i=[],u=0;u<e.shape[0];u++)i.push(u);for(f=p===i.length?i:et({seed:r,size:p,mutate:!1,replacement:!1})(i),u=0;u<p;u++)rt(l,n,a,o*f[u],s,d,m);return t},st=g;var nt=function(t,e,r,i,s,n,o){var a,d,m,f,p;for(a=i,d=o,f=0,p=0;p<t;p++)f+=(m=e[a]-s[d])*m,a+=r,d+=n;return st(f)};var ot=function(t,e,r,i,s,n,o){var a=nt(t,e,r,i,s,n,o);return a*a};var at=function(t,e,r,i,s,n,o){var a,d,m,f;for(a=i,d=o,m=0,f=0;f<t;f++)m+=e[a]*s[d],a+=r,d+=n;return m},dt=at;var mt=function(t,e,r,i,s,n,o){var a=1-dt(t,e,r,i,s,n,o);return a*a},ft=at;var pt=function(t,e,r,i,s,n,o){var a=1-ft(t,e,r,i,s,n,o);return a*a},lt=y.factory,ut=w.factory,ct=x,ht=d.ndarray,vt=ot,jt=mt,gt=pt;function bt(t,e,r,i,s,n){var o,a,d,m,f;for(m=s.data,o=(d=s.strides[0])*n,a=0,f=0;f<r;f++)t[f]=e(i,m,1,a,m,1,o),a+=d;return t}var yt=function(t,e,r,i,s){var n,o,a,d,m,f,p,l,u,c,h,v,j,g,b,y,w,x,E,T,z,O,k,A,V,P,F,M;if(A=t.shape[0],d=t.shape[1],l=e.shape[0],v=t.data,w=t.strides[0],x=t.strides[1],E=t.offset,j=e.data,b=e.strides[0],y=e.strides[1],p=ut({seed:s}),a=lt({seed:p()}),p=p.normalized,h="cosine"===r?jt:"correlation"===r?gt:vt,k=a(0,l-1),1===A)return ht(d,j,y,b*k,v,x,E);for(n=[k],T=new Array(d),m=new Array(2*l),g=0,P=0;P<l;P++)m[g]=ct,m[g+1]=0,g+=2;for(f=new Array(l),F=1;F<A;F++){for(bt(T,h,l,d,e,n[F-1]),u=0,g=0,P=0;P<l;P++)T[P]<m[g]?(m[g]=T[P],m[g+1]=F-1,u+=T[P]):u+=m[g],g+=2;for(f[0]=m[0]/u,g=2,P=1;P<l;P++)f[P]=f[P-1]+m[g]/u,g+=2;for(c=ct,z=-1,M=0;M<i;M++){for(k=-1;-1===k;)for(V=p(),P=0;P<l;P++)if(V<f[P]){k=P;break}for(u=0,o=b*k,g=0,P=0;P<l;P++)(O=h(d,j,1,b*P,j,1,o))<m[g]?u+=O:u+=m[g],g+=2;u<c&&(c=u,z=k)}n.push(z)}for(P=0;P<A;P++)ht(d,j,y,b*n[P],v,x,E),E+=w;return t},wt=y.factory,xt=E;var Et=function(t,e,r){var i,s,n,o,a,d,m,f,p,l,u,c,h,v,j,g;for(h=t.shape[0],v=t.shape[1],s=t.data,m=t.strides[0],f=t.strides[1],l=t.offset,o=e.data,n=e.shape[0],a=e.strides[0],d=e.strides[1],c=e.offset,i=wt(0,h-1,{seed:r}),p=[],j=0;j<h*v;j++)p.push(xt());for(j=0;j<n;j++){for(u=v*i(),g=0;g<v;g++)p[u+g](o[c+d*g]);c+=a}for(u=0,j=0;j<h;j++){for(g=0;g<v;g++)s[l+f*g]=p[u](),u+=1;l+=m}return t},Tt=x;var zt=function(t,e,r,i,s,n,o,a,d){var m,f,p,l;for(m=Tt,l=0;l<e;l++)(p=t(r,i,1,n,o,a,d))<m&&(m=p,f=l),n+=s;return f};var Ot=function(t,e,r,i,s,n,o,a){var d,m;for(m=0;m<t;m++)d=r[s],d+=(n[a]-d)/e,r[s]=d,s+=i,a+=o;return r},kt=zt,At=Ot;var Vt=function(t,e,r,i,s){var n,o,a,d,m,f,p,l,u,c,h,v;for(c=e.shape[0],n=e.shape[1],d=t.shape[0],o=e.data,m=e.strides[0],a=t.data,f=t.strides[0],l=0,v=0;v<d;v++)p=m*(h=kt(s,c,n,o,m,0,a,1,l)),u=r.get(h,0)+1,At(n,u,o,1,p,a,1,l),i(h,s(n,o,1,p,a,1,l)),l+=f},Pt=l.ndarray,Ft=A,Mt=X,qt=tt,Nt=it,Rt=yt,St=Et,_t=Vt;var Bt=function(t,e,r,i,s,n){var o,a;return a=t.shape[1],function(d){void 0===o&&((o=Ft(n.init[1],a,!0)).count=0);if(o.count<n.init[1]&&(Pt(a,d.data,d.strides[0],d.offset,o.data,o.strides[1],o.strides[0]*o.count),o.count+=1,o.count<n.init[1]))return!1;n.normalize&&("cosine"===n.metric?o=Mt(o):"correlation"===n.metric&&(o=qt(o,i())));t="forgy"===n.init[0]?St(t,o,n.seed):"sample"===n.init[0]?Nt(t,o,n.seed):Rt(t,o,n.metric,n.init[2],n.seed);return _t(o,t,e,r,s),!0}},Lt=g;var Yt=function(t,e){var r,i;for(r=[],i=0;i<e;i++)r.push(0);return function(e,i){var s,n,o;return o=t.get(e,0)+1,t.set(e,0,o),t.set(e,1,t.get(e,1)+i),n=t.get(e,2),n+=(s=i-n)/o,r[e]+=s*(i-n),t.set(e,2,n),t.set(e,3,Lt(r[e]/(o-1))),t}},Ct=T,Dt=m;var Gt=function(t){var e,r,i,s,n;for(2,e=2*(i=new Dt(2*t)).BYTES_PER_ELEMENT,r=[],s=0,n=0;n<t;n++)r.push(Ct(new Dt(i.buffer,s,2))),s+=e;return function(e){var s;if(0===arguments.length)return i;for(s=0;s<t;s++)r[s](e.get(s));return i}},Ht=t.isPrimitive,It=e,Jt=r,Kt=i,Qt=s,Ut=n,Wt=o,Xt=a,Zt=d,$t=A,te=P,ee=N,re=S,ie=J,se=K,ne=Bt,oe=Yt,ae=Gt,de=ot,me=mt,fe=pt,pe=zt,le=Ot,ue=U,ce=X,he=Z,ve=tt;function je(t,e){var r={};return r.centroids=$t(t,e,!1),r.stats=$t(t,4,!1),r}var ge=function(){var t,e,r,i,s,n,o,a,d,m,f,p,l,u;if(It(arguments[0]))u=arguments[0].shape[0],a=arguments[0].shape[1],e=$t(u,a,!0),e=te(e,arguments[0]),arguments.length>1&&(i=arguments[1],l=!0);else{if(!Ht(arguments[0]))throw new TypeError(Qt("invalid argument. First argument must either be a positive integer specifying the number of clusters or a matrix containing initial centroids. Value: `%s`.",arguments[0]));if(u=arguments[0],!Ht(a=arguments[1]))throw new TypeError(Qt("invalid argument. Argument specifying number of dimensions must be a positive integer. Value: `%s`.",a));arguments.length>2&&(i=arguments[2],l=!0)}if((m={metric:"euclidean",init:se["kmeans++"].slice(),seed:Ut(),normalize:!0,copy:!0}).init[1]=u,m.init[2]=2+Wt(Xt(u)),l&&(p=ie(m,i)))throw p;if(m.init[1]<u)throw new RangeError(Qt("invalid option. First `init` parameter option must be greater than or equal to the number of clusters. Options: `%f`.",m.init[1]));return s=je(u,a),o=$t(u,4,!0),t=oe(o,u),"cosine"===m.metric?(d=me,m.copy&&(n=ee(a,!0))):"correlation"===m.metric?(d=fe,m.normalize&&(r=ae(a)),m.copy&&(n=ee(a,!0))):d=de,void 0===e?(e=$t(u,a,!0),f=ne(e,o,t,r,d,m)):te(s.centroids,e),Kt(c,"seed",m.seed),Kt(c,"predict",h),c;function c(i){var p,l,c,h,v,j,g,b,y,w,x;if(0===arguments.length)return f?null:s;if(!Jt(b=i))throw new TypeError(Qt("invalid argument. Must provide a 1-dimensional ndarray. Value: `%s`.",b));if(b.shape[0]!==a)throw new Error(Qt("invalid argument. Vector length must match centroid dimensions. Expected: `%u``. Actual: `%u``.",a,b.shape[0]));if(r&&r(b),f){if(!1===f(b))return null;f=void 0}else m.normalize&&("cosine"===m.metric?(m.copy&&(b=re(n,b)),ue(a,b.data,b.strides[0],b.offset)):"correlation"===m.metric&&(m.copy&&(b=re(n,b)),c=r(),he(a,b.data,b.strides[0],b.offset,c,2,0,c,2,1))),p=e.data,v=e.strides[0],l=b.data,h=b.strides[0],j=b.offset,g=v*(x=pe(d,u,a,p,v,0,l,h,j)),y=o.get(x,0)+1,le(a,y,p,1,g,l,h,j),w=d(a,p,1,g,l,h,j),t(x,w);return Zt(e.length,e.data,1,s.centroids.data,1),Zt(o.length,o.data,1,s.stats.data,1),s}function h(t,i){var s,n,o,p,l,c,h,v,j,g,b;if(arguments.length>1){if(!Jt(t))throw new TypeError(Qt("invalid argument. Output argument must be a 1-dimensional ndarray. Value: `%s`.",t));j=t,v=i}else v=t;if(!It(v))throw new TypeError(Qt("invalid argument. Must provide a 2-dimensional ndarray. Value: `%s`.",v));if(v.shape[1]!==a)throw new Error(Qt("invalid argument. Number of matrix columns must match centroid dimensions. Expected: `%u``. Actual: `%u`.",a,v.shape[1]));if(void 0===j)j=ee(v.shape[0],!1);else if(j.length!==v.shape[0])throw new Error(Qt("invalid argument. Output vector length must match the number of data points. Expected: `%u`. Actual: `%u`.",v.shape[0],j.length));if(f)return null;for(o=v.shape[0],m.normalize&&("cosine"===m.metric?(m.copy&&(v=te($t(o,a,!0),v)),v=ce(v)):"correlation"===m.metric&&(m.copy&&(v=te($t(o,a,!0),v)),v=ve(v,r()))),n=e.data,c=e.strides[0],s=v.data,p=v.strides[0],l=v.strides[1],h=v.offset,b=0;b<o;b++)g=pe(d,u,a,n,c,0,s,l,h),j.set(b,g),h+=p;return j}},be=ge;export{be as default};
//# sourceMappingURL=index.mjs.map
