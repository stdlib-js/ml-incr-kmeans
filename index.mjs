// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-matrix-like@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-vector-like@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-minstd-shuffle@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@v0.1.1-esm/index.mjs";import d,{ndarray as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dcopy@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ctor@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ctor@v0.1.0-esm/index.mjs";import{ndarray as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-gcopy@v0.1.0-esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{isPrimitive as v}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.1-esm/index.mjs";import{factory as y}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-sample@v0.1.0-esm/index.mjs";import{factory as w}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-discrete-uniform@v0.1.0-esm/index.mjs";import{factory as x}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.1.1-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-mean@v0.1.1-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-incr-meanstdev@v0.1.0-esm/index.mjs";function O(t,e,r){return(r?l:p)("float64",new f(t*e),[t,e],[e,1],0,"row-major")}function k(t,e){var r,i,s,n,o,a,d,m,f,p,l;for(f=e.shape[0],p=e.shape[1],r=e.data,i=t.data,s=e.strides[0],n=e.strides[1],o=t.strides[0],a=t.strides[1],d=e.offset,m=t.offset,l=0;l<f;l++)u(p,r,n,d,i,a,m),d+=s,m+=o;return t}function A(t,e){return(e?l:p)("float64",new f(t),[t],[1],0,"row-major")}function V(t,e){return u(e.shape[0],e.data,e.strides[0],e.offset,t.data,t.strides[0],t.offset),t}var F=["euclidean","correlation","cosine"],M=["forgy","sample","kmeans++"];function q(e,r){if(!c(r))return new TypeError(s("invalid argument. Options argument must be an object. Value: `%s`.",r));if(h(r,"metric")&&(e.metric=r.metric,!g(F,e.metric)))return new TypeError(s('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"metric",F.join('", "'),e.metric));if(h(r,"init")){if(!j(r.init))return new TypeError(s("invalid option. `%s` option must be an array-like object. Option: `%s`.","init",r.init));if(!g(M,r.init[0]))return new TypeError(s('invalid option. `%s` option method must be one of the following: "%s". Option: `%s`.',"init",M.join('", "'),r.init[0]));if(e.init[0]=r.init[0],r.init.length>1&&(e.init[1]=r.init[1],!t(e.init[1])))return new TypeError(s("invalid option. First `%s` parameter option must be a positive integer. Option: `%s`.","init",e.init[1]));if(r.init.length>2&&(e.init[2]=r.init[2],!t(e.init[2])))return new TypeError(s("invalid option. Second `%s` parameter option must be a positive integer. Option: `%s`.","init",e.init[2]))}return h(r,"normalize")&&(e.normalize=r.normalize,!v(e.normalize))?new TypeError(s("invalid option. `%s` option must be a boolean. Option: `%s`.","normalize",e.normalize)):h(r,"copy")&&(e.copy=r.copy,!v(e.copy))?new TypeError(s("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",e.copy)):(h(r,"seed")&&(e.seed=r.seed),null)}var N={forgy:["forgy",1],sample:["sample",1],"kmeans++":["kmeans++",1,1]};function P(t,e,r,i){var s,n,o,a;for(n=0,s=i,a=0;a<t;a++)n+=(o=e[s])*o,s+=r;for(n=b(n),s=i,a=0;a<t;a++)e[s]/=n;return e}function R(t){var e,r,i,s,n,o,a;for(e=t.data,n=t.shape[0],o=t.shape[1],r=t.strides[0],i=t.strides[1],s=t.offset,a=0;a<n;a++)P(o,e,i,s),s+=r;return t}function S(t,e,r,i,s,n,o,a,d,m){var f,p,l,u;for(f=i,p=o,l=m,u=0;u<t;u++)e[f]=(e[f]-s[p])/a[l],f+=r,p+=n,l+=d;return e}function _(t,e){var r,i,s,n,o,a,d;for(r=t.data,o=t.shape[0],a=t.shape[1],i=t.strides[0],s=t.strides[1],n=t.offset,d=0;d<o;d++)S(a,r,s,n,e,2,0,e,2,1),n+=i;return t}function B(t,e,r,i,s,n,o){var a=function(t,e,r,i,s,n,o){var a,d,m,f,p;for(a=i,d=o,f=0,p=0;p<t;p++)f+=(m=e[a]-s[d])*m,a+=r,d+=n;return b(f)}(t,e,r,i,s,n,o);return a*a}function L(t,e,r,i,s,n,o){var a,d,m,f;for(a=i,d=o,m=0,f=0;f<t;f++)m+=e[a]*s[d],a+=r,d+=n;return m}function Y(t,e,r,i,s,n,o){var a=1-L(t,e,r,i,s,n,o);return a*a}function C(t,e,r,i,s,n,o){var a=1-L(t,e,r,i,s,n,o);return a*a}function D(t,e,r,i,s,n){var o,a,d,m,f;for(m=s.data,o=(d=s.strides[0])*n,a=0,f=0;f<r;f++)t[f]=e(i,m,1,a,m,1,o),a+=d;return t}function G(t,e,r,i,s,n,o,a,d){var m,f,p,l;for(m=E,l=0;l<e;l++)(p=t(r,i,1,n,o,a,d))<m&&(m=p,f=l),n+=s;return f}function H(t,e,r,i,s,n,o,a){var d,m;for(m=0;m<t;m++)d=r[s],d+=(n[a]-d)/e,r[s]=d,s+=i,a+=o;return r}function I(t,e,r,i,s,n){var o,a;return a=t.shape[1],function(d){void 0===o&&((o=O(n.init[1],a,!0)).count=0);if(o.count<n.init[1]&&(u(a,d.data,d.strides[0],d.offset,o.data,o.strides[1],o.strides[0]*o.count),o.count+=1,o.count<n.init[1]))return!1;n.normalize&&("cosine"===n.metric?o=R(o):"correlation"===n.metric&&(o=_(o,i())));t="forgy"===n.init[0]?function(t,e,r){var i,s,n,o,a,d,m,f,p,l,u,c,h,v,j,g;for(h=t.shape[0],v=t.shape[1],s=t.data,m=t.strides[0],f=t.strides[1],l=t.offset,o=e.data,n=e.shape[0],a=e.strides[0],d=e.strides[1],c=e.offset,i=w(0,h-1,{seed:r}),p=[],j=0;j<h*v;j++)p.push(T());for(j=0;j<n;j++){for(u=v*i(),g=0;g<v;g++)p[u+g](o[c+d*g]);c+=a}for(u=0,j=0;j<h;j++){for(g=0;g<v;g++)s[l+f*g]=p[u](),u+=1;l+=m}return t}(t,o,n.seed):"sample"===n.init[0]?function(t,e,r){var i,s,n,o,a,d,f,p,l,u,c;for(l=t.shape[0],u=t.shape[1],s=t.data,d=t.strides[1],f=t.offset,n=e.data,o=e.strides[0],a=e.strides[1],i=[],c=0;c<e.shape[0];c++)i.push(c);for(p=l===i.length?i:y({seed:r,size:l,mutate:!1,replacement:!1})(i),c=0;c<l;c++)m(u,n,a,o*p[c],s,d,f);return t}(t,o,n.seed):function(t,e,r,i,s){var n,o,a,d,f,p,l,u,c,h,v,j,g,b,y,T,z,O,k,A,V,F,M,q,N,P,R,S;if(q=t.shape[0],d=t.shape[1],u=e.shape[0],j=t.data,z=t.strides[0],O=t.strides[1],k=t.offset,g=e.data,y=e.strides[0],T=e.strides[1],l=x({seed:s}),a=w({seed:l()}),l=l.normalized,v="cosine"===r?Y:"correlation"===r?C:B,M=a(0,u-1),1===q)return m(d,g,T,y*M,j,O,k);for(n=[M],A=new Array(d),f=new Array(2*u),b=0,P=0;P<u;P++)f[b]=E,f[b+1]=0,b+=2;for(p=new Array(u),R=1;R<q;R++){for(D(A,v,u,d,e,n[R-1]),c=0,b=0,P=0;P<u;P++)A[P]<f[b]?(f[b]=A[P],f[b+1]=R-1,c+=A[P]):c+=f[b],b+=2;for(p[0]=f[0]/c,b=2,P=1;P<u;P++)p[P]=p[P-1]+f[b]/c,b+=2;for(h=E,V=-1,S=0;S<i;S++){for(M=-1;-1===M;)for(N=l(),P=0;P<u;P++)if(N<p[P]){M=P;break}for(c=0,o=y*M,b=0,P=0;P<u;P++)(F=v(d,g,1,y*P,g,1,o))<f[b]?c+=F:c+=f[b],b+=2;c<h&&(h=c,V=M)}n.push(V)}for(P=0;P<q;P++)m(d,g,T,y*n[P],j,O,k),k+=z;return t}(t,o,n.metric,n.init[2],n.seed);return function(t,e,r,i,s){var n,o,a,d,m,f,p,l,u,c,h;for(u=e.shape[0],n=e.shape[1],d=t.shape[0],o=e.data,m=e.strides[0],a=t.data,f=t.strides[0],l=0,h=0;h<d;h++)p=m*(c=G(s,u,n,o,m,0,a,1,l)),H(n,r.get(c,0)+1,o,1,p,a,1,l),i(c,s(n,o,1,p,a,1,l)),l+=f}(o,t,e,r,s),!0}}function J(t,e){var r,i;for(r=[],i=0;i<e;i++)r.push(0);return function(e,i){var s,n,o;return o=t.get(e,0)+1,t.set(e,0,o),t.set(e,1,t.get(e,1)+i),n=t.get(e,2),n+=(s=i-n)/o,r[e]+=s*(i-n),t.set(e,2,n),t.set(e,3,b(r[e]/(o-1))),t}}function K(t){var e,r,i,s,n;for(2,e=2*(i=new f(2*t)).BYTES_PER_ELEMENT,r=[],s=0,n=0;n<t;n++)r.push(z(new f(i.buffer,s,2))),s+=e;return function(e){var s;if(0===arguments.length)return i;for(s=0;s<t;s++)r[s](e.get(s));return i}}function Q(t,e){var r={};return r.centroids=O(t,e,!1),r.stats=O(t,4,!1),r}function U(){var m,f,p,l,u,c,h,v,j,g,b,y,w,x;if(e(arguments[0]))x=arguments[0].shape[0],v=arguments[0].shape[1],f=k(f=O(x,v,!0),arguments[0]),arguments.length>1&&(l=arguments[1],w=!0);else{if(!t(arguments[0]))throw new TypeError(s("invalid argument. First argument must either be a positive integer specifying the number of clusters or a matrix containing initial centroids. Value: `%s`.",arguments[0]));if(x=arguments[0],!t(v=arguments[1]))throw new TypeError(s("invalid argument. Argument specifying number of dimensions must be a positive integer. Value: `%s`.",v));arguments.length>2&&(l=arguments[2],w=!0)}if((g={metric:"euclidean",init:N["kmeans++"].slice(),seed:n(),normalize:!0,copy:!0}).init[1]=x,g.init[2]=2+o(a(x)),w&&(y=q(g,l)))throw y;if(g.init[1]<x)throw new RangeError(s("invalid option. First `%s` parameter option must be greater than or equal to the number of clusters. Options: `%f`.","init",g.init[1]));return u=Q(x,v),h=O(x,4,!0),m=J(h,x),"cosine"===g.metric?(j=Y,g.copy&&(c=A(v,!0))):"correlation"===g.metric?(j=C,g.normalize&&(p=K(v)),g.copy&&(c=A(v,!0))):j=B,void 0===f?(f=O(x,v,!0),b=I(f,h,m,p,j,g)):k(u.centroids,f),i(E,"seed",g.seed),i(E,"predict",T),E;function E(t){var e,i,n,o,a,l,y,w,E,T,z;if(0===arguments.length)return b?null:u;if(!r(w=t))throw new TypeError(s("invalid argument. Must provide a one-dimensional ndarray. Value: `%s`.",w));if(w.shape[0]!==v)throw new Error(s("invalid argument. Vector length must match centroid dimensions. Expected: `%u``. Actual: `%u``.",v,w.shape[0]));if(p&&p(w),b){if(!1===b(w))return null;b=void 0}else g.normalize&&("cosine"===g.metric?(g.copy&&(w=V(c,w)),P(v,w.data,w.strides[0],w.offset)):"correlation"===g.metric&&(g.copy&&(w=V(c,w)),n=p(),S(v,w.data,w.strides[0],w.offset,n,2,0,n,2,1))),e=f.data,a=f.strides[0],i=w.data,o=w.strides[0],l=w.offset,y=a*(z=G(j,x,v,e,a,0,i,o,l)),E=h.get(z,0)+1,H(v,E,e,1,y,i,o,l),T=j(v,e,1,y,i,o,l),m(z,T);return d(f.length,f.data,1,u.centroids.data,1),d(h.length,h.data,1,u.stats.data,1),u}function T(t,i){var n,o,a,d,m,l,u,c,h,y,w;if(arguments.length>1){if(!r(t))throw new TypeError(s("invalid argument. Output argument must be a one-dimensional ndarray. Value: `%s`.",t));h=t,c=i}else c=t;if(!e(c))throw new TypeError(s("invalid argument. Must provide a two-dimensional ndarray. Value: `%s`.",c));if(c.shape[1]!==v)throw new Error(s("invalid argument. Number of matrix columns must match centroid dimensions. Expected: `%u`. Actual: `%u`.",v,c.shape[1]));if(void 0===h)h=A(c.shape[0],!1);else if(h.length!==c.shape[0])throw new Error(s("invalid argument. Output vector length must match the number of data points. Expected: `%u`. Actual: `%u`.",c.shape[0],h.length));if(b)return null;for(a=c.shape[0],g.normalize&&("cosine"===g.metric?(g.copy&&(c=k(O(a,v,!0),c)),c=R(c)):"correlation"===g.metric&&(g.copy&&(c=k(O(a,v,!0),c)),c=_(c,p()))),o=f.data,l=f.strides[0],n=c.data,d=c.strides[0],m=c.strides[1],u=c.offset,w=0;w<a;w++)y=G(j,x,v,o,l,0,n,m,u),h.set(w,y),u+=d;return h}}export{U as default};
//# sourceMappingURL=index.mjs.map
